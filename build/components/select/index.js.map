{"version":3,"file":"index.js","sources":["../../../src/components/select/index.tsx"],"sourcesContent":["import React, { useEffect, useLayoutEffect, useRef, useState } from \"react\";\nimport { useClickAnyWhere, useOnClickOutside } from \"../../hooks\";\nimport { ArrowDownIcon, ArrowDownSpecialIcon } from \"../../icons\";\nimport Card from \"../card\";\nimport Input from \"../input\";\nimport './styles.scss';\n\ninterface ISelectItem {\n    label: string;\n    value: any;\n}\n\ninterface ISelect extends React.HTMLProps<HTMLInputElement> {\n    options?: Array<ISelectItem>;\n    className?: string;\n    inputClassName?: string;\n    withLabel?: boolean;\n}\n\nconst Select = (props: ISelect) => {\n    const {options, className, inputClassName = '', withLabel, ...rest} = props;\n    const [showOptions, setShowOptions] = useState(false);\n    const ref = useRef(null)\n    const optionsRef = useRef(null);\n    const [optionsPosition, setOptionsPosition] = useState({top: 'calc(100% + 1px)', bottom: 'auto'})\n\n    useLayoutEffect(() => {\n        let el = ref.current;\n        let opEl = optionsRef.current\n        if (el && opEl) {\n            if (el.offsetParent.clientHeight - el.offsetTop < opEl.offsetHeight) {\n                setOptionsPosition({top: 'auto', bottom: 'calc(100% + 1px)'})\n            }\n        }\n    }, [ref, optionsRef])\n\n    useOnClickOutside(ref, () => setShowOptions(false))\n    \n    const onInputChange = (event: any, option: any) => {\n        if (option) {\n            event.target.value = option;\n            rest.onChange(event)\n        } else {\n            rest.onChange(event)\n        }\n        let timer = setTimeout(() => {\n            setShowOptions(false)\n            clearTimeout(timer)\n        }, 50)\n    }\n\n    return (\n        <div className={`imiui-select${className ? ` ${className}` : ''}`} ref={ref} onClick={() => setShowOptions(!showOptions)}>\n            <Input \n                {...rest}\n                className={inputClassName}\n                disabled\n                readOnly\n                withLabel={withLabel}\n                endIcon={<ArrowDownIcon fill=\"var(--imiui-gray-200)\" className={`arrow-icon${showOptions ? ' rotate' : ''}`}/>}\n            />\n            <Card ref={optionsRef} id='imiui-select-options-id' style={{...optionsPosition, visibility: showOptions ? 'visible' : 'hidden'}} className=\"options\" variant='dialogue'>\n                {options.map((option, index) => {\n                    return (\n                        <button key={index} onClick={(event) => onInputChange(event, option)} className={'t-label-regular-tiny'}>\n                            <div>{option.label}</div>\n                        </button>\n                    )\n                })}\n            </Card>\n        </div>\n    )\n}\n\nexport default Select"],"names":[],"mappings":"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"}