{"version":3,"file":"index.js","sources":["../../../src/components/select/index.tsx"],"sourcesContent":["import React, { useRef, useState } from \"react\";\nimport { useClickAnyWhere, useOnClickOutside } from \"../../hooks\";\nimport { ArrowDownIcon, ArrowDownSpecialIcon } from \"../../icons\";\nimport Card from \"../card\";\nimport Input from \"../input\";\nimport './styles.scss';\n\ninterface ISelectItem {\n    label: string;\n    value: any;\n}\n\ninterface ISelect extends React.HTMLProps<HTMLInputElement> {\n    options?: Array<ISelectItem>;\n    className?: string;\n}\n\nconst Select = (props: ISelect) => {\n    const {options, className, ...rest} = props;\n    const [showOptions, setShowOptions] = useState(false);\n    const ref = useRef(null)\n\n    useOnClickOutside(ref, () => setShowOptions(false))\n    \n    const onInputChange = (event: any, option: any) => {\n        if (option) {\n            event.target.value = option;\n            rest.onChange(event)\n        } else {\n            rest.onChange(event)\n        }\n        let timer = setTimeout(() => {\n            setShowOptions(false)\n            clearTimeout(timer)\n        }, 50)\n    }\n\n    return (\n        <div className={`imiui-select${className ? ` ${className}` : ''}`} ref={ref} onClick={() => setShowOptions(!showOptions)}>\n            <Input \n                {...rest}\n                disabled\n                readOnly\n                withLabel={true}\n                endIcon={<ArrowDownIcon fill=\"var(--imiui-gray-200)\" className={`arrow-icon${showOptions ? ' rotate' : ''}`}/>}\n            />\n            {showOptions && <Card className=\"options\" variant='dialogue'>\n                {options.map((option, index) => {\n                    return (\n                        <button key={index} onClick={(event) => onInputChange(event, option)} className={'t-label-regular-tiny'}>\n                            <div>{option.label}</div>\n                        </button>\n                    )\n                })}\n            </Card>}\n        </div>\n    )\n}\n\nexport default Select"],"names":[],"mappings":";;;;;;;;AAiBM,IAAA,MAAM,GAAG,UAAC,KAAc,EAAA;AACnB,IAAA,IAAA,OAAO,GAAwB,KAAK,CAA7B,OAAA,EAAE,SAAS,GAAa,KAAK,CAAlB,SAAA,EAAK,IAAI,GAAI,MAAA,CAAA,KAAK,EAArC,CAAA,SAAA,EAAA,WAAA,CAA6B,CAAD,CAAU;IACtC,IAAA,EAAA,GAAgC,QAAQ,CAAC,KAAK,CAAC,EAA9C,WAAW,GAAA,EAAA,CAAA,CAAA,CAAA,EAAE,cAAc,GAAA,EAAA,CAAA,CAAA,CAAmB,CAAC;AACtD,IAAA,IAAM,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,CAAA;AAExB,IAAA,iBAAiB,CAAC,GAAG,EAAE,YAAA,EAAM,OAAA,cAAc,CAAC,KAAK,CAAC,CAAA,EAAA,CAAC,CAAA;AAEnD,IAAA,IAAM,aAAa,GAAG,UAAC,KAAU,EAAE,MAAW,EAAA;AAC1C,QAAA,IAAI,MAAM,EAAE;AACR,YAAA,KAAK,CAAC,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC;AAC5B,YAAA,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAA;AACvB,SAAA;AAAM,aAAA;AACH,YAAA,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAA;AACvB,SAAA;QACD,IAAI,KAAK,GAAG,UAAU,CAAC,YAAA;YACnB,cAAc,CAAC,KAAK,CAAC,CAAA;YACrB,YAAY,CAAC,KAAK,CAAC,CAAA;SACtB,EAAE,EAAE,CAAC,CAAA;AACV,KAAC,CAAA;AAED,IAAA,QACI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,EAAK,SAAS,EAAE,sBAAe,SAAS,GAAG,GAAI,CAAA,MAAA,CAAA,SAAS,CAAE,GAAG,EAAE,CAAE,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,YAAA,EAAM,OAAA,cAAc,CAAC,CAAC,WAAW,CAAC,GAAA,EAAA;AACpH,QAAA,KAAA,CAAA,aAAA,CAAC,KAAK,EAAA,QAAA,CAAA,EAAA,EACE,IAAI,EAAA,EACR,QAAQ,EACR,IAAA,EAAA,QAAQ,EACR,IAAA,EAAA,SAAS,EAAE,IAAI,EACf,OAAO,EAAE,oBAAC,aAAa,EAAA,EAAC,IAAI,EAAC,uBAAuB,EAAC,SAAS,EAAE,YAAA,CAAA,MAAA,CAAa,WAAW,GAAG,SAAS,GAAG,EAAE,CAAE,GAAG,EAChH,CAAA,CAAA;AACD,QAAA,WAAW,IAAI,KAAC,CAAA,aAAA,CAAA,IAAI,IAAC,SAAS,EAAC,SAAS,EAAC,OAAO,EAAC,UAAU,EAAA,EACvD,OAAO,CAAC,GAAG,CAAC,UAAC,MAAM,EAAE,KAAK,EAAA;YACvB,QACI,gCAAQ,GAAG,EAAE,KAAK,EAAE,OAAO,EAAE,UAAC,KAAK,EAAA,EAAK,OAAA,aAAa,CAAC,KAAK,EAAE,MAAM,CAAC,GAAA,EAAE,SAAS,EAAE,sBAAsB,EAAA;AACnG,gBAAA,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,IAAA,EAAM,MAAM,CAAC,KAAK,CAAO,CACpB,EACZ;AACL,SAAC,CAAC,CACC,CACL,EACT;AACL;;;;"}