{"version":3,"file":"useOnClickOutside.js","sources":["../../src/hooks/useOnClickOutside.tsx"],"sourcesContent":["import { RefObject } from 'react'\n\nimport useEventListener from './useEventListener'\n\ntype Handler = (event: MouseEvent) => void\n\nfunction useOnClickOutside<T extends HTMLElement = HTMLElement>(\n  ref: RefObject<T>,\n  handler: Handler,\n  mouseEvent: 'mousedown' | 'mouseup' = 'mousedown',\n): void {\n  useEventListener(mouseEvent, event => {\n    const el = ref?.current\n\n    // Do nothing if clicking ref's element or descendent elements\n    if (!el || el.contains(event.target as Node)) {\n      return\n    }\n\n    handler(event)\n  })\n}\n\nexport default useOnClickOutside\n"],"names":[],"mappings":";;AAMA,SAAS,iBAAiB,CACxB,GAAiB,EACjB,OAAgB,EAChB,UAAiD,EAAA;AAAjD,IAAA,IAAA,UAAA,KAAA,KAAA,CAAA,EAAA,EAAA,UAAiD,GAAA,WAAA,CAAA,EAAA;AAEjD,IAAA,gBAAgB,CAAC,UAAU,EAAE,UAAA,KAAK,EAAA;QAChC,IAAM,EAAE,GAAG,GAAG,KAAA,IAAA,IAAH,GAAG,KAAH,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,GAAG,CAAE,OAAO,CAAA;;QAGvB,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAc,CAAC,EAAE;YAC5C,OAAM;AACP,SAAA;QAED,OAAO,CAAC,KAAK,CAAC,CAAA;AAChB,KAAC,CAAC,CAAA;AACJ;;;;"}